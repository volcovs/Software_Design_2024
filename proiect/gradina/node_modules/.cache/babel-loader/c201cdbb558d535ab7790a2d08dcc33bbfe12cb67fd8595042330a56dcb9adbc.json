{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Data\\\\an III\\\\sem_II\\\\PS\\\\proiect\\\\gradina\\\\src\\\\view\\\\Statistics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticsPage = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    // Fetch your data for all charts\n    const fetchData = async () => {\n      // Example data (replace this with your actual data fetching logic)\n      const pieChartData = {\n        labels: ['Red', 'Blue', 'Yellow'],\n        datasets: [{\n          data: [300, 50, 100],\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n          hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n        }]\n      };\n      const barChartData1 = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [{\n          label: 'Dataset 1',\n          data: [65, 59, 80, 81, 56, 55, 40],\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: 'rgba(255, 99, 132, 1)',\n          borderWidth: 1\n        }]\n      };\n      const barChartData2 = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [{\n          label: 'Dataset 2',\n          data: [45, 30, 70, 50, 40, 60, 70],\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          borderColor: 'rgba(54, 162, 235, 1)',\n          borderWidth: 1\n        }]\n      };\n      setChartData({\n        pieChartData,\n        barChartData1,\n        barChartData2\n      });\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (chartData) {\n      // Render the pie chart\n      const pieCtx = document.getElementById('pieChart').getContext('2d');\n      new Chart(pieCtx, {\n        type: 'pie',\n        data: chartData.pieChartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n\n      // Render the first bar chart\n      const barCtx1 = document.getElementById('barChart1').getContext('2d');\n      new Chart(barCtx1, {\n        type: 'bar',\n        data: chartData.barChartData1,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n\n      // Render the second bar chart\n      const barCtx2 = document.getElementById('barChart2').getContext('2d');\n      new Chart(barCtx2, {\n        type: 'bar',\n        data: chartData.barChartData2,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n    }\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"pieChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"barChart1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"barChart2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(StatisticsPage, \"90oplSNxmJIDarigP+4GZm4vLv8=\");\n_c = StatisticsPage;\nexport default StatisticsPage;\nvar _c;\n$RefreshReg$(_c, \"StatisticsPage\");","map":{"version":3,"names":["React","useEffect","useState","Chart","jsxDEV","_jsxDEV","StatisticsPage","_s","chartData","setChartData","fetchData","pieChartData","labels","datasets","data","backgroundColor","hoverBackgroundColor","barChartData1","label","borderColor","borderWidth","barChartData2","pieCtx","document","getElementById","getContext","type","options","responsive","maintainAspectRatio","barCtx1","barCtx2","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","alignItems","width","id","_c","$RefreshReg$"],"sources":["D:/Personal_Data/an III/sem_II/PS/proiect/gradina/src/view/Statistics.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst StatisticsPage = () => {\r\n    const [chartData, setChartData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch your data for all charts\r\n        const fetchData = async () => {\r\n            // Example data (replace this with your actual data fetching logic)\r\n            const pieChartData = {\r\n                labels: ['Red', 'Blue', 'Yellow'],\r\n                datasets: [{\r\n                    data: [300, 50, 100],\r\n                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\r\n                    hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\r\n                }]\r\n            };\r\n\r\n            const barChartData1 = {\r\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n                datasets: [{\r\n                    label: 'Dataset 1',\r\n                    data: [65, 59, 80, 81, 56, 55, 40],\r\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n                    borderColor: 'rgba(255, 99, 132, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            };\r\n\r\n            const barChartData2 = {\r\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n                datasets: [{\r\n                    label: 'Dataset 2',\r\n                    data: [45, 30, 70, 50, 40, 60, 70],\r\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n                    borderColor: 'rgba(54, 162, 235, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            };\r\n\r\n            setChartData({ pieChartData, barChartData1, barChartData2 });\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (chartData) {\r\n            // Render the pie chart\r\n            const pieCtx = document.getElementById('pieChart').getContext('2d');\r\n            new Chart(pieCtx, {\r\n                type: 'pie',\r\n                data: chartData.pieChartData,\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false\r\n                }\r\n            });\r\n\r\n            // Render the first bar chart\r\n            const barCtx1 = document.getElementById('barChart1').getContext('2d');\r\n            new Chart(barCtx1, {\r\n                type: 'bar',\r\n                data: chartData.barChartData1,\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false\r\n                }\r\n            });\r\n\r\n            // Render the second bar chart\r\n            const barCtx2 = document.getElementById('barChart2').getContext('2d');\r\n            new Chart(barCtx2, {\r\n                type: 'bar',\r\n                data: chartData.barChartData2,\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false\r\n                }\r\n            });\r\n        }\r\n    }, [chartData]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Statistics Page</h1>\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                <div style={{ width: '50%' }}>\r\n                    <canvas id=\"pieChart\"></canvas>\r\n                </div>\r\n                <div style={{ width: '50%' }}>\r\n                    <canvas id=\"barChart1\"></canvas>\r\n                </div>\r\n                <div style={{ width: '50%' }}>\r\n                    <canvas id=\"barChart2\"></canvas>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatisticsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}