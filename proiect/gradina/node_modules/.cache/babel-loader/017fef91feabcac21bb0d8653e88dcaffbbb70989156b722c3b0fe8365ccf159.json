{"ast":null,"code":"import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../style/UpdateNewUser.css';\nimport UserPresenter from \"../presenter/UserPresenter\";\nclass UpdateNewUser extends Component {\n  constructor(props) {\n    super(props);\n    this.onButtonClickCancel = () => {\n      const {\n        role,\n        onChangePage,\n        lang\n      } = this.props;\n      onChangePage(role, 3, 0, 0, lang);\n    };\n    this.handleChangeUser = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState(prevState => ({\n        user: {\n          ...prevState.user,\n          [name]: value\n        }\n      }));\n    };\n    this.handleChangeEmployee = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState(prevState => ({\n        employee: {\n          ...prevState.employee,\n          [name]: value\n        }\n      }));\n    };\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        role,\n        onChangePage,\n        lang\n      } = this.props;\n      const {\n        user,\n        employee\n      } = this.state;\n      const {\n        userId\n      } = this.props;\n      if (userId) {\n        // Update existing data\n        axios.put(`http://localhost:8080/users/update`, user).then(response => {\n          console.log('User updated successfully:', response.data);\n          // Optionally redirect to another page or display a success message\n        }).catch(error => {\n          console.error('Error updating user data:', error);\n        });\n      } else {\n        // Add new data\n        axios.post('http://localhost:8080/users/add', user).then(response => {\n          console.log('New user added successfully:', response.data);\n          // Optionally redirect to another page or display a success message\n        }).catch(error => {\n          console.error('Error adding new user:', error);\n        });\n        axios.post('http://localhost:8080/employee/add', employee).then(response => {\n          console.log('New personal data added successfully:', response.data);\n          // Optionally redirect to another page or display a success message\n        }).catch(error => {\n          console.error('Error adding new data:', error);\n        });\n      }\n      onChangePage(role, 3, 0, 0, lang);\n    };\n    this.state = {\n      user: {\n        username: '',\n        person: '',\n        password: '',\n        adminStatus: ''\n      },\n      employee: {\n        firstName: '',\n        lastName: '',\n        dateOfBirth: '',\n        address: '',\n        phoneNumber: '',\n        email: ''\n      },\n      lastLang: null,\n      dict: []\n    };\n    this.presenter = new UserPresenter(this);\n  }\n  componentDidMount() {\n    this.presenter.fetchUpdNew();\n  }\n  render() {\n    return this.presenter.renderUpdNew();\n  }\n}\nexport default UpdateNewUser;","map":{"version":3,"names":["React","Component","axios","UserPresenter","UpdateNewUser","constructor","props","onButtonClickCancel","role","onChangePage","lang","handleChangeUser","e","name","value","target","setState","prevState","user","handleChangeEmployee","employee","handleSubmit","preventDefault","state","userId","put","then","response","console","log","data","catch","error","post","username","person","password","adminStatus","firstName","lastName","dateOfBirth","address","phoneNumber","email","lastLang","dict","presenter","componentDidMount","fetchUpdNew","render","renderUpdNew"],"sources":["D:/Personal_Data/an III/sem_II/PS/proiect/gradina/src/view/UpdateNewUser.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../style/UpdateNewUser.css';\r\nimport UserPresenter from \"../presenter/UserPresenter\";\r\n\r\nclass UpdateNewUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                person: '',\r\n                password: '',\r\n                adminStatus: ''\r\n            },\r\n            employee: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                address: '',\r\n                phoneNumber: '',\r\n                email: ''\r\n            },\r\n            lastLang: null,\r\n            dict: []\r\n        };\r\n\r\n        this.presenter = new UserPresenter(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.presenter.fetchUpdNew();\r\n    }\r\n\r\n    onButtonClickCancel = () => {\r\n        const { role, onChangePage, lang } = this.props;\r\n        onChangePage(role, 3, 0, 0, lang);\r\n    };\r\n\r\n    handleChangeUser = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                [name]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    handleChangeEmployee = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState(prevState => ({\r\n            employee: {\r\n                ...prevState.employee,\r\n                [name]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { role, onChangePage, lang } = this.props;\r\n        const { user, employee } = this.state;\r\n        const { userId } = this.props;\r\n\r\n        if (userId) {\r\n            // Update existing data\r\n            axios.put(`http://localhost:8080/users/update`, user)\r\n                .then(response => {\r\n                    console.log('User updated successfully:', response.data);\r\n                    // Optionally redirect to another page or display a success message\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error updating user data:', error);\r\n                });\r\n        } else {\r\n            // Add new data\r\n            axios.post('http://localhost:8080/users/add', user)\r\n                .then(response => {\r\n                    console.log('New user added successfully:', response.data);\r\n                    // Optionally redirect to another page or display a success message\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error adding new user:', error);\r\n                });\r\n\r\n            axios.post('http://localhost:8080/employee/add', employee)\r\n                .then(response => {\r\n                    console.log('New personal data added successfully:', response.data);\r\n                    // Optionally redirect to another page or display a success message\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error adding new data:', error);\r\n                });\r\n        }\r\n\r\n        onChangePage(role, 3, 0, 0, lang);\r\n    };\r\n\r\n    render() {\r\n        return this.presenter.renderUpdNew();\r\n    }\r\n}\r\n\r\nexport default UpdateNewUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}