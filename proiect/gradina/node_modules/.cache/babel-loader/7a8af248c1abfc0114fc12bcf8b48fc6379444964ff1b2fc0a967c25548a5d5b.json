{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Data\\\\an III\\\\sem_II\\\\PS\\\\proiect\\\\gradina\\\\src\\\\view\\\\Statistics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticsPage = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    // Fetch your data for the pie chart\n    const fetchData = async () => {\n      // Example data (replace this with your actual data fetching logic)\n      const data = {\n        labels: ['Red', 'Blue', 'Yellow'],\n        datasets: [{\n          data: [300, 50, 100],\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n          hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n        }]\n      };\n      setChartData(data);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (chartData) {\n      // Render the pie chart\n      const ctx = document.getElementById('pieChart').getContext('2d');\n      new Chart(ctx, {\n        type: 'pie',\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n    }\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '400px',\n        height: '400px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"pieChart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(StatisticsPage, \"90oplSNxmJIDarigP+4GZm4vLv8=\");\n_c = StatisticsPage;\nexport default StatisticsPage;\nvar _c;\n$RefreshReg$(_c, \"StatisticsPage\");","map":{"version":3,"names":["React","useEffect","useState","Chart","jsxDEV","_jsxDEV","StatisticsPage","_s","chartData","setChartData","fetchData","data","labels","datasets","backgroundColor","hoverBackgroundColor","ctx","document","getElementById","getContext","type","options","responsive","maintainAspectRatio","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","id","_c","$RefreshReg$"],"sources":["D:/Personal_Data/an III/sem_II/PS/proiect/gradina/src/view/Statistics.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst StatisticsPage = () => {\r\n    const [chartData, setChartData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch your data for the pie chart\r\n        const fetchData = async () => {\r\n            // Example data (replace this with your actual data fetching logic)\r\n            const data = {\r\n                labels: ['Red', 'Blue', 'Yellow'],\r\n                datasets: [{\r\n                    data: [300, 50, 100],\r\n                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\r\n                    hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\r\n                }]\r\n            };\r\n\r\n            setChartData(data);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (chartData) {\r\n            // Render the pie chart\r\n            const ctx = document.getElementById('pieChart').getContext('2d');\r\n            new Chart(ctx, {\r\n                type: 'pie',\r\n                data: chartData,\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false\r\n                }\r\n            });\r\n        }\r\n    }, [chartData]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Statistics Page</h1>\r\n            <div style={{ width: '400px', height: '400px' }}>\r\n                <canvas id=\"pieChart\"></canvas>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatisticsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B;MACA,MAAMC,IAAI,GAAG;QACTC,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC;QACjCC,QAAQ,EAAE,CAAC;UACPF,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;UACpBG,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;UAClDC,oBAAoB,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS;QAC1D,CAAC;MACL,CAAC;MAEDN,YAAY,CAACE,IAAI,CAAC;IACtB,CAAC;IAEDD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACZ,IAAIO,SAAS,EAAE;MACX;MACA,MAAMQ,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;MAChE,IAAIhB,KAAK,CAACa,GAAG,EAAE;QACXI,IAAI,EAAE,KAAK;QACXT,IAAI,EAAEH,SAAS;QACfa,OAAO,EAAE;UACLC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE;QACzB;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACf,SAAS,CAAC,CAAC;EAEf,oBACIH,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBvB,OAAA;MAAKwB,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAP,QAAA,eAC5CnB,OAAA;QAAQ2B,EAAE,EAAC;MAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACrB,EAAA,CA7CID,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AA+CpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}