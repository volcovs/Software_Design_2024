{"ast":null,"code":"import { useMemo } from 'react';\nexport const dataValue = (dataItem, field) => {\n  if (typeof field === 'function') return field(dataItem);\n  if (dataItem == null) return dataItem;\n  if (typeof field === 'string' && typeof dataItem === 'object' && field in dataItem) return dataItem[field];\n  return dataItem;\n};\nexport const dataText = (dataItem, textField) => {\n  const value = dataValue(dataItem, textField);\n  return value == null ? '' : String(value);\n};\n/**\n * I don't know that the shallow equal makes sense here but am too afraid to\n * remove it.\n */\n\nexport function valueMatcher(a, b, dataKey) {\n  return dataValue(a, dataKey) === dataValue(b, dataKey);\n}\nexport function dataIndexOf(data, value, dataKey) {\n  const valueDataKey = dataValue(value, dataKey);\n  let idx = -1;\n  while (++idx < data.length) {\n    const datum = data[idx];\n    if (datum === value || dataValue(datum, dataKey) === valueDataKey) return idx;\n  }\n  return -1;\n}\nexport function dataItem(data, value, dataKey) {\n  const idx = dataIndexOf(data, value, dataKey); // This isn't strictly safe, but we want to allow items that aren't in the list\n\n  return idx !== -1 ? data[idx] : value;\n}\nexport const useAccessors = (textField, dataKey) => {\n  return useMemo(() => ({\n    text: item => dataText(item, textField),\n    value: item => dataValue(item, dataKey),\n    indexOf: (data, value) => dataIndexOf(data, value, dataKey),\n    matches: (a, b) => valueMatcher(a, b, dataKey),\n    findOrSelf: (data, value) => dataItem(data, value, dataKey),\n    includes: (data, value) => dataIndexOf(data, value, dataKey) !== -1\n  }), [textField, dataKey]);\n};","map":{"version":3,"names":["useMemo","dataValue","dataItem","field","dataText","textField","value","String","valueMatcher","a","b","dataKey","dataIndexOf","data","valueDataKey","idx","length","datum","useAccessors","text","item","indexOf","matches","findOrSelf","includes"],"sources":["D:/Personal_Data/an III/sem_II/PS/proiect/gradina/node_modules/react-widgets/esm/Accessors.js"],"sourcesContent":["import { useMemo } from 'react';\nexport const dataValue = (dataItem, field) => {\n  if (typeof field === 'function') return field(dataItem);\n  if (dataItem == null) return dataItem;\n  if (typeof field === 'string' && typeof dataItem === 'object' && field in dataItem) return dataItem[field];\n  return dataItem;\n};\nexport const dataText = (dataItem, textField) => {\n  const value = dataValue(dataItem, textField);\n  return value == null ? '' : String(value);\n};\n/**\n * I don't know that the shallow equal makes sense here but am too afraid to\n * remove it.\n */\n\nexport function valueMatcher(a, b, dataKey) {\n  return dataValue(a, dataKey) === dataValue(b, dataKey);\n}\nexport function dataIndexOf(data, value, dataKey) {\n  const valueDataKey = dataValue(value, dataKey);\n  let idx = -1;\n\n  while (++idx < data.length) {\n    const datum = data[idx];\n    if (datum === value || dataValue(datum, dataKey) === valueDataKey) return idx;\n  }\n\n  return -1;\n}\nexport function dataItem(data, value, dataKey) {\n  const idx = dataIndexOf(data, value, dataKey); // This isn't strictly safe, but we want to allow items that aren't in the list\n\n  return idx !== -1 ? data[idx] : value;\n}\nexport const useAccessors = (textField, dataKey) => {\n  return useMemo(() => ({\n    text: item => dataText(item, textField),\n    value: item => dataValue(item, dataKey),\n    indexOf: (data, value) => dataIndexOf(data, value, dataKey),\n    matches: (a, b) => valueMatcher(a, b, dataKey),\n    findOrSelf: (data, value) => dataItem(data, value, dataKey),\n    includes: (data, value) => dataIndexOf(data, value, dataKey) !== -1\n  }), [textField, dataKey]);\n};"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,OAAO,MAAMC,SAAS,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC5C,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE,OAAOA,KAAK,CAACD,QAAQ,CAAC;EACvD,IAAIA,QAAQ,IAAI,IAAI,EAAE,OAAOA,QAAQ;EACrC,IAAI,OAAOC,KAAK,KAAK,QAAQ,IAAI,OAAOD,QAAQ,KAAK,QAAQ,IAAIC,KAAK,IAAID,QAAQ,EAAE,OAAOA,QAAQ,CAACC,KAAK,CAAC;EAC1G,OAAOD,QAAQ;AACjB,CAAC;AACD,OAAO,MAAME,QAAQ,GAAGA,CAACF,QAAQ,EAAEG,SAAS,KAAK;EAC/C,MAAMC,KAAK,GAAGL,SAAS,CAACC,QAAQ,EAAEG,SAAS,CAAC;EAC5C,OAAOC,KAAK,IAAI,IAAI,GAAG,EAAE,GAAGC,MAAM,CAACD,KAAK,CAAC;AAC3C,CAAC;AACD;AACA;AACA;AACA;;AAEA,OAAO,SAASE,YAAYA,CAACC,CAAC,EAAEC,CAAC,EAAEC,OAAO,EAAE;EAC1C,OAAOV,SAAS,CAACQ,CAAC,EAAEE,OAAO,CAAC,KAAKV,SAAS,CAACS,CAAC,EAAEC,OAAO,CAAC;AACxD;AACA,OAAO,SAASC,WAAWA,CAACC,IAAI,EAAEP,KAAK,EAAEK,OAAO,EAAE;EAChD,MAAMG,YAAY,GAAGb,SAAS,CAACK,KAAK,EAAEK,OAAO,CAAC;EAC9C,IAAII,GAAG,GAAG,CAAC,CAAC;EAEZ,OAAO,EAAEA,GAAG,GAAGF,IAAI,CAACG,MAAM,EAAE;IAC1B,MAAMC,KAAK,GAAGJ,IAAI,CAACE,GAAG,CAAC;IACvB,IAAIE,KAAK,KAAKX,KAAK,IAAIL,SAAS,CAACgB,KAAK,EAAEN,OAAO,CAAC,KAAKG,YAAY,EAAE,OAAOC,GAAG;EAC/E;EAEA,OAAO,CAAC,CAAC;AACX;AACA,OAAO,SAASb,QAAQA,CAACW,IAAI,EAAEP,KAAK,EAAEK,OAAO,EAAE;EAC7C,MAAMI,GAAG,GAAGH,WAAW,CAACC,IAAI,EAAEP,KAAK,EAAEK,OAAO,CAAC,CAAC,CAAC;;EAE/C,OAAOI,GAAG,KAAK,CAAC,CAAC,GAAGF,IAAI,CAACE,GAAG,CAAC,GAAGT,KAAK;AACvC;AACA,OAAO,MAAMY,YAAY,GAAGA,CAACb,SAAS,EAAEM,OAAO,KAAK;EAClD,OAAOX,OAAO,CAAC,OAAO;IACpBmB,IAAI,EAAEC,IAAI,IAAIhB,QAAQ,CAACgB,IAAI,EAAEf,SAAS,CAAC;IACvCC,KAAK,EAAEc,IAAI,IAAInB,SAAS,CAACmB,IAAI,EAAET,OAAO,CAAC;IACvCU,OAAO,EAAEA,CAACR,IAAI,EAAEP,KAAK,KAAKM,WAAW,CAACC,IAAI,EAAEP,KAAK,EAAEK,OAAO,CAAC;IAC3DW,OAAO,EAAEA,CAACb,CAAC,EAAEC,CAAC,KAAKF,YAAY,CAACC,CAAC,EAAEC,CAAC,EAAEC,OAAO,CAAC;IAC9CY,UAAU,EAAEA,CAACV,IAAI,EAAEP,KAAK,KAAKJ,QAAQ,CAACW,IAAI,EAAEP,KAAK,EAAEK,OAAO,CAAC;IAC3Da,QAAQ,EAAEA,CAACX,IAAI,EAAEP,KAAK,KAAKM,WAAW,CAACC,IAAI,EAAEP,KAAK,EAAEK,OAAO,CAAC,KAAK,CAAC;EACpE,CAAC,CAAC,EAAE,CAACN,SAAS,EAAEM,OAAO,CAAC,CAAC;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}